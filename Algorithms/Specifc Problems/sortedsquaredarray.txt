=== Sorted Squared Array ===

Write a function that takes in a non-empty array of integers that are sorted
in ascending order and returns a new array of the same length with the squares
of the original integers also sorted in ascending order.

*** Optimal Space & Time Complexity ***

Time: O(n)
Space: O(n)

*** Test Data ***

array = [ 1,2, 3, 5, 6, 8, 9]

output = [ 1, 4, 9, 25, 36, 64, 81 ]


array = [ -2, 1, 4, 5 ]

output = [ 1, 4, 16, 25 ]

*** Code ***

#include <vector>
using namespace std;

vector<int> sortedSquaredArray(vector<int> array) {
  // Write your code here.
	vector<int> results(array.size(), 0);
	
	int smallerIndex = 0;
	int largerIndex = array.size() - 1;
	
	for(int index = array.size() - 1; index >= 0; index--) {
		
		int smallerValue = array[smallerIndex];
		int largerValue = array[largerIndex];
		
		if(abs(smallerValue) > abs(largerValue)) {
			results[index] = smallerValue * smallerValue;
			smallerIndex++;
		}
		else {
			results[index] = largerValue * largerValue;
			largerIndex--;
		}
		
	}
	
  return results;
}