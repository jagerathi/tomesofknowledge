=== POWERSHELL ===

*** get uptime ***

	(get-date)-(gcim Win32_OperatingSystem).LastBootUpTime
	
*** run sql ***

	$SQLServer = "aws-sql2"
	$db3 = "abcv2"
	$uid = "sa"
	$pwd = "SgQ>RQZ.p-SU9J#rrV{3L,8"
	$query = "select top 5 * from itm_item order by id desc"

	# hard-coded command 
	Invoke-Sqlcmd -ServerInstance $SQLServer -Database $db3 -Username $uid -Password $pwd -Query $query | Export-Csv "testoutput.txt" -Delimiter "," -NoTypeInformation
	
	# Skip the headers
	Invoke-Sqlcmd -ServerInstance $SQLServer -Database $db3 -Username $uid -Password $pwd -Query $query | ConvertTo-Csv -NoTypeInformation | Select-Object -Skip 1 | Set-Content "testoutput.txt"

	# command in external file 
	Invoke-Sqlcmd -ServerInstance $SQLServer -Database $db3 -Username $uid -Password $pwd -InputFile "c:\abc\acr_import\abc.sql" | Export-Csv "c:\abc\acr_import\acr_projects.txt" -Delimiter "," -NoTypeInformation

*** event log ***

	Get-EventLog -List 
	Get-EventLog -LogName Application -Newest 50 -Source AbcHbClient -EntryType Error 
	Get-EventLog -LogName Application -Index 17871 | Select-Object -Property *
	Get-EventLog -LogName Application -Newest 1000 | Group-Object -Property Source -NoElement | Sort-Object -Property Count -Descending
	Get-EventLog -LogName System -Message *description*
	

*** remote execution issues ***

	Check execution policy: powershell Get-ExecutionPolicy -List 
	Set the execution policy: powershell Set-ExecutionPolicy remotesigned -Force 
	Work around: From command prompt - powershell <PowershellCommand> <Params> (cmd powershell Get-Service)

*** Creating Files and Folders ***

	File (current path): New-Item -Path . -Name "filename" -ItemType "file" -Value "file content"
	Folder: New-Item -Path "c:\" -Name "FolderName" -ItemType "directory"

*** Deleting Files and Folders ***

	File (current path): Remove-Item -Path file.txt -Verbose 
	File: Remove-Item -Path c:\temp\file.txt -Verbose 
	Folder: Remove-Item -Path c:\temp\old -Recurse -Verbose 
	File (hidden): Remove-Item -Path shady.file -Verbose -Force 

*** IIS ***

	Get-IISAppPool
	Restart-WebAppPool <AppPoolName>

*** Windows Services ***

	Get-Service 
	Get-Service | where { $_.DisplayName -like 'Octo*'}

	Start-Service <name>
	Stop-Service <name>

*** Disks and Volumes ***

	Get-Volume 

*** Create a drive mapping ***

	$cred = Get-Credential -Credential abc\adm-kknoll
	New-PSDrive -Name "Z" -Root "\\172.20.3.7\storage" -Persist -PSProvider -Credential $cred 

*** Find and Replace Text ***	

((Get-Content -Path c:\acr_import\DeltekVisionWebServiceInterface.exe.config) -replace 'ABCprint2!', 'ABCprint3!' ) | Set-Content -Path c:\acr_import\DeltekVisionWebServiceInterface.exe.config
