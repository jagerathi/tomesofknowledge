=== GIT CLI Cheatsheet ===

.gitignore : create this file to ignore things in your project folder. can be specific file in path (path\to\file.ext), file in any path (file.ext), by file type (*.ext) or for a folder (path\to\folder\*)

add : add something to the staging area of your local repository. Use "-A" to add all files and folders, or space-delimited list of file names, or folder/* for everything in a folder.

branch : create a local branch (use "-d" to delete a branch)

checkout : switches active branch on local repository 

clone : makes a local copy of a repository 

commit :  -m "comment". Use "--amend -m "comment" to correct the commit message. 

diff: <branch>..<branch> or <hash>..<hash> to compare branches or revisions.

fetch : update local repository from remote repository. Use the "--prune" option to make sure only active branches are displayed in a remote repository.

init : navigate to the project folder and use init to start a new local repository 

log : view the git log for your repository. SPACE to next page and "q" to quit.

merge : merge branch x into active branch 

mv : move or rename something 

push : updates the remote repository from the local repository. Use push "--delete" a remote branch. 

pull

repository : 1) local resides on your computer, 2) remote implies remote server - master copy for team

reset : "--hard HEAD" will revert all local changes to last commit. Use "--hard HASH" to rollback to a specific revision.

revert : moves the active file to the specified hash 

rm : remove a file "rm <filename>"

status : get the status of your local repository 

stash : Think of the Stash as a clipboard on steroids: it takes all the changes in your working copy and saves them for you on a new clipboard. You're left with a clean working copy, i.e. you have no more local changes.

stash list : get a list of stashes 









References:
https://www.git-tower.com/learn/git/ebook/en/command-line/basics/working-on-your-project/#start